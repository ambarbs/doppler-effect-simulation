{"version":3,"sources":["assets/night.jpg","assets/star-small.png","serviceWorker.js","store/constants.js","store/AppStore.js","Components/App/App.styles.js","Components/Velocity/Velocity.styles.js","Components/Velocity/Velocity.js","store/thunks.js","Components/Slider/Slider.styles.js","Components/Slider/Slider.js","Components/Velocity/VelocityContainer.js","Components/Star/Star.styles.js","Components/Star/Star.js","Components/App/App.js","Components/App/AppContainer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","actionType","middlewares","thunk","store","createStore","combineReducers","appReducer","state","velocity","action","VELOCITY","type","payload","composeWithDevTools","applyMiddleware","AppWrapper","styled","div","night","VelocityWrapper","props","minWidth","minHeight","VelocityLabel","label","VelocityInput","input","Velocity","handleInputChange","e","value","_","get","setState","validateAndSetVelocity","debounce","bind","adjustValueInRange","test","this","setVelocity","onChange","Component","defaultProps","dispatch","a","SliderWrapper","Slider","onSliderChange","min","max","target","VelocityContainer","sliderValue","velocityValue","parseInt","Math","pow","actions","toFixed","connect","ImageStar","img","sepia","hueRotate","saturate","Star","getSepia","getHueRotate","getSaturate","src","starImage","App","AppContainer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.311e1e83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/night.184eb6ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/star-small.eba6df9e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","export const actionType = {\r\n    VELOCITY: 'VELOCITY',\r\n}\r\n","import {\r\n    createStore,\r\n    combineReducers,\r\n    applyMiddleware,\r\n} from 'redux';\r\n// import { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {\r\n    actionType,\r\n} from './constants';\r\n\r\nconst appReducer = (state = {\r\n\r\n    velocity: '0',\r\n}, action) => {\r\n    const {\r\n        VELOCITY,\r\n    } = actionType;\r\n\r\n    switch (action.type) {\r\n        default:\r\n            break;\r\n        case VELOCITY:\r\n            state = {\r\n                ...state,\r\n                velocity: action.payload,\r\n            };\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nconst middlewares = [\r\n    // createLogger(),\r\n    thunk\r\n];\r\n\r\nexport const store = createStore(\r\n    combineReducers({appReducer}),\r\n    {},\r\n    composeWithDevTools(\r\n        applyMiddleware(...middlewares),\r\n        // other store enhancers if any\r\n    )\r\n);","import styled from 'styled-components';\r\nimport night from '../../assets/night.jpg';\r\n\r\nexport const AppWrapper = styled.div`\r\n  //background-color: #38423f;\r\n  background-image: url(${night});\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  height: 100vh;\r\n  @media (max-width: 576px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n","import styled from 'styled-components';\r\n\r\nexport const VelocityWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: transparent;\r\n  min-width: ${props => props.minWidth || '250px'};\r\n  @media (max-width: 576px) {\r\n      flex-direction: column;\r\n      // min-height: ${props => props.minHeight};\r\n      min-width: unset;\r\n      padding-bottom: 1rem;\r\n  }\r\n`\r\n\r\nexport const VelocityLabel = styled.label`\r\n  font-size: 1.2rem;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding-right: 0.5rem;\r\n   @media (max-width: 576px) {\r\n    padding-right: unset;\r\n   }\r\n`\r\n\r\nexport const VelocityInput = styled.input`\r\n  width: 50%;\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  display: inline-block;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n`\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport {VelocityInput, VelocityLabel, VelocityWrapper} from \"./Velocity.styles\";\r\n\r\n\r\nexport default class Velocity extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: ''\r\n        }\r\n\r\n        // Delay action 2 seconds\r\n        this.validateAndSetVelocity = _.debounce(this.validateAndSetVelocity, 50)\r\n        this.validateAndSetVelocity = this.validateAndSetVelocity.bind(this);\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const value = _.get(e, 'target.value', null);\r\n\r\n        this.setState({\r\n            value\r\n        })\r\n\r\n        // Execute the debounced onChange method\r\n        this.validateAndSetVelocity(value)\r\n    }\r\n\r\n    validateAndSetVelocity(value) {\r\n        let adjustValueInRange = value;\r\n        if (/^-?\\d*\\.?\\d{0,6}$/.test(value)) {\r\n            if (value > 100) {\r\n                adjustValueInRange = 100;\r\n                this.setState({\r\n                    value: 100\r\n                })\r\n            } else if (value < -100) {\r\n                adjustValueInRange = -100;\r\n                this.setState({\r\n                    value: -100\r\n                })\r\n            }\r\n            this.props.setVelocity(adjustValueInRange);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {velocity} = this.props;\r\n        return <VelocityWrapper>\r\n            <VelocityLabel>Velocity (km/s)</VelocityLabel>\r\n            <VelocityInput\r\n                type='text'\r\n                value={velocity}\r\n                onChange={this.handleInputChange}\r\n            />\r\n        </VelocityWrapper>\r\n    }\r\n}\r\n\r\nVelocity.propTypes = {\r\n    velocity: PropTypes.number\r\n};\r\n\r\nVelocity.defaultProps = {\r\n    velocity: ''\r\n};","import {actionType} from \"./constants\";\r\n\r\nexport const setVelocity = (velocity) => {\r\n    return async (dispatch) => {\r\n        return dispatch({type: actionType.VELOCITY, payload: velocity})\r\n    }\r\n}","import styled from \"styled-components\";\r\n\r\nexport const SliderWrapper = styled.input`\r\n  -webkit-appearance: none;\r\n  width: 300px;\r\n  height: 2px;\r\n  border-radius: 25px;  \r\n  background: #e7f0fa;\r\n  outline: none;\r\n  opacity: 0.7;\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n  cursor: pointer;\r\n \r\n\r\n  &::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 50%; \r\n  background: #c0c5cc;\r\n}\r\n`","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {SliderWrapper} from './Slider.styles';\r\n\r\nconst Slider = ({onSliderChange, value, min, max}) =>\r\n    <SliderWrapper type=\"range\" min={min} max={max} value={value}\r\n                    onChange={(e) => onSliderChange(e.target.value)}\r\n    />\r\n\r\nexport default Slider;\r\n\r\nSlider.propTypes = {\r\n    value: PropTypes.number,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number,\r\n    onSliderChange: PropTypes.func,\r\n};\r\n\r\nSlider.defaultProps = {\r\n    value: 0,\r\n    min: 0,\r\n    max: 100,\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Velocity from \"./Velocity\";\r\nimport {VelocityWrapper} from \"./Velocity.styles\";\r\nimport {setVelocity} from \"../../store/thunks\";\r\nimport Slider from \"../Slider/Slider\";\r\n\r\nclass VelocityContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSliderChange = this.onSliderChange.bind(this);\r\n    }\r\n\r\n    onSliderChange(sliderValue){\r\n        let velocityValue = sliderValue;\r\n        if(sliderValue < 0){\r\n            velocityValue = -1 * parseInt(Math.pow(-1 * sliderValue, 1/1.3), 10);\r\n        }\r\n        this.props.actions.setVelocity(velocityValue);\r\n    }\r\n\r\n    render() {\r\n        const {velocity, actions} = this.props;\r\n\r\n        const sliderValue\r\n            = velocity < 0 ? -1*(Math.pow(-1 * velocity,1.3)).toFixed(0)\r\n            : velocity;\r\n\r\n        return (\r\n            <>\r\n                <VelocityWrapper\r\n                    minWidth={'800px'}\r\n                >\r\n                    <Velocity\r\n                        velocity={velocity}\r\n                        setVelocity={actions.setVelocity}\r\n                    />\r\n                   <Slider\r\n                        value={sliderValue}\r\n                        min='-399'\r\n                        max='100'\r\n                        onSliderChange={this.onSliderChange}\r\n                   />\r\n                </VelocityWrapper>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        velocity: state.appReducer.velocity,\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        actions: {\r\n            setVelocity: velocity => {\r\n                return dispatch(setVelocity(velocity))\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(VelocityContainer)","import styled from 'styled-components';\r\n\r\nexport const ImageStar = styled.img`\r\n  padding: 20px;\r\n  filter: sepia(${props => props.sepia}%) hue-rotate(${props => props.hueRotate}deg) saturate(${props => props.saturate}0%);\r\n\r\n  //blue\r\n  //filter: sepia(1%) hue-rotate(190deg) saturate(5000%);\r\n  //red\r\n  //filter: sepia(4%) hue-rotate(1deg) saturate(10000%);\r\n  transition: 2s ease;\r\n`","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport starImage from \"../../assets/star-small.png\";\r\nimport {ImageStar} from \"./Star.styles\";\r\n\r\nexport default class Star extends Component {\r\n    static getSepia(velocity) {\r\n        if (velocity >= 0 && velocity <= 100) { // red\r\n            return 4;\r\n        } else if (velocity < 0 && velocity >= -100) { //blue\r\n            return 0;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    static getHueRotate(velocity) {\r\n        if (velocity >= 0 && velocity <= 100) { // red\r\n            return 340;\r\n        } else if (velocity < 0 && velocity >= -100) { // blue\r\n            return 170;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    static getSaturate(velocity, sliderValue) {\r\n        if (velocity >= 0 && velocity <= 100) { // red\r\n            return sliderValue * 2;\r\n        } else if (velocity < 0 && velocity >= -100) { // blue\r\n            return parseInt(sliderValue * -0.1);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        const {velocity} = this.props;\r\n\r\n        let velocityValue = velocity;\r\n        if (velocity < 0) {\r\n            velocityValue = -1 * parseInt(Math.pow(-1 * velocity, 1.3), 10);\r\n        }\r\n        const sepia = Star.getSepia(velocity);\r\n        const hueRotate = Star.getHueRotate(velocity);\r\n        const saturate = Star.getSaturate(velocity, velocityValue);\r\n\r\n        return <ImageStar\r\n            src={starImage}\r\n            sepia={sepia}\r\n            hueRotate={hueRotate}\r\n            saturate={saturate}\r\n        />\r\n    }\r\n}\r\n\r\n\r\nStar.propTypes = {\r\n    velocity: PropTypes.number,\r\n}\r\n\r\nStar.defaultProps = {}","import React, {Component} from 'react';\r\nimport {AppWrapper} from \"./App.styles\";\r\nimport VelocityContainer from \"../Velocity/VelocityContainer\";\r\nimport Star from \"../Star/Star\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        const {velocity} = this.props;\r\n        return (\r\n            <AppWrapper>\r\n                <Star\r\n                    velocity={velocity}\r\n                />\r\n                <VelocityContainer/>\r\n            </AppWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport App from \"./App\";\r\nimport {setVelocity} from \"../../store/thunks\";\r\n\r\nclass AppContainer extends Component {\r\n    render() {\r\n        return (\r\n            <App\r\n                velocity={this.props.velocity}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        velocity: state.appReducer.velocity,\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        actions: {\r\n            setVelocity: velocity => {\r\n                return dispatch(setVelocity(velocity))\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(AppContainer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './store/AppStore'\nimport AppContainer from \"./Components/App/AppContainer\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <AppContainer store={store}/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}